--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create panel
local panel = ccui.Layout:create()
panel:ignoreContentAdaptWithSize(false)
panel:setClippingEnabled(false)
panel:setBackGroundColorType(1)
panel:setBackGroundColor({r = 150, g = 200, b = 255})
panel:setBackGroundColorOpacity(0)
panel:setTouchEnabled(true);
panel:setLayoutComponentEnabled(true)
panel:setName("panel")
panel:setTag(635)
panel:setCascadeColorEnabled(true)
panel:setCascadeOpacityEnabled(true)
panel:setScaleX(0.0100)
panel:setScaleY(0.0100)
layout = ccui.LayoutComponent:bindLayoutComponent(panel)
Node:addChild(panel)

--Create node_bg
local node_bg=cc.Node:create()
node_bg:setName("node_bg")
node_bg:setTag(544)
node_bg:setCascadeColorEnabled(true)
node_bg:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(node_bg)
panel:addChild(node_bg)

--Create image_title_bg
local image_title_bg = ccui.ImageView:create()
image_title_bg:ignoreContentAdaptWithSize(false)
image_title_bg:loadTexture("battle/lottery/lottery_pic_title_bg_1.png",0)
image_title_bg:setScale9Enabled(true)
image_title_bg:setCapInsets({x = 216, y = 28, width = 4, height = 30})
image_title_bg:setLayoutComponentEnabled(true)
image_title_bg:setName("image_title_bg")
image_title_bg:setTag(244)
image_title_bg:setCascadeColorEnabled(true)
image_title_bg:setCascadeOpacityEnabled(true)
image_title_bg:setPosition(0.0000, 289.6305)
layout = ccui.LayoutComponent:bindLayoutComponent(image_title_bg)
layout:setSize({width = 370.0000, height = 86.0000})
layout:setLeftMargin(-185.0000)
layout:setRightMargin(-185.0000)
layout:setTopMargin(-332.6305)
layout:setBottomMargin(246.6305)
node_bg:addChild(image_title_bg)

--Create spr_title_bg_1
local spr_title_bg_1 = cc.Sprite:create("battle/lottery/lottery_pic_title_bg_2.png")
spr_title_bg_1:setName("spr_title_bg_1")
spr_title_bg_1:setTag(242)
spr_title_bg_1:setCascadeColorEnabled(true)
spr_title_bg_1:setCascadeOpacityEnabled(true)
spr_title_bg_1:setPosition(202.9601, 296.8764)
spr_title_bg_1:setRotationSkewY(180.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(spr_title_bg_1)
layout:setSize({width = 238.0000, height = 94.0000})
layout:setLeftMargin(83.9601)
layout:setRightMargin(-321.9601)
layout:setTopMargin(-343.8764)
layout:setBottomMargin(249.8764)
spr_title_bg_1:setBlendFunc({src = 1, dst = 771})
node_bg:addChild(spr_title_bg_1)

--Create spr_title_bg_0
local spr_title_bg_0 = cc.Sprite:create("battle/lottery/lottery_pic_title_bg_2.png")
spr_title_bg_0:setName("spr_title_bg_0")
spr_title_bg_0:setTag(243)
spr_title_bg_0:setCascadeColorEnabled(true)
spr_title_bg_0:setCascadeOpacityEnabled(true)
spr_title_bg_0:setPosition(-203.1580, 296.7160)
layout = ccui.LayoutComponent:bindLayoutComponent(spr_title_bg_0)
layout:setSize({width = 238.0000, height = 94.0000})
layout:setLeftMargin(-322.1580)
layout:setRightMargin(84.1580)
layout:setTopMargin(-343.7160)
layout:setBottomMargin(249.7160)
spr_title_bg_0:setBlendFunc({src = 1, dst = 771})
node_bg:addChild(spr_title_bg_0)

--Create spr_title
local spr_title = cc.Sprite:create("hall/dial/lottery_title_gx.png")
spr_title:setName("spr_title")
spr_title:setTag(241)
spr_title:setCascadeColorEnabled(true)
spr_title:setCascadeOpacityEnabled(true)
spr_title:setPosition(0.0000, 287.4832)
layout = ccui.LayoutComponent:bindLayoutComponent(spr_title)
layout:setSize({width = 196.0000, height = 60.0000})
layout:setLeftMargin(-98.0000)
layout:setRightMargin(-98.0000)
layout:setTopMargin(-317.4832)
layout:setBottomMargin(257.4832)
spr_title:setBlendFunc({src = 1, dst = 771})
node_bg:addChild(spr_title)

--Create image_text_bg
local image_text_bg = ccui.ImageView:create()
image_text_bg:ignoreContentAdaptWithSize(false)
image_text_bg:loadTexture("common/layerbg/com_pic_infobg.png",0)
image_text_bg:setScale9Enabled(true)
image_text_bg:setCapInsets({x = 42, y = 26, width = 1, height = 1})
image_text_bg:setLayoutComponentEnabled(true)
image_text_bg:setName("image_text_bg")
image_text_bg:setTag(237)
image_text_bg:setCascadeColorEnabled(true)
image_text_bg:setCascadeOpacityEnabled(true)
image_text_bg:setPosition(0.0000, 183.3105)
layout = ccui.LayoutComponent:bindLayoutComponent(image_text_bg)
layout:setSize({width = 310.0000, height = 48.0000})
layout:setLeftMargin(-155.0000)
layout:setRightMargin(-155.0000)
layout:setTopMargin(-207.3105)
layout:setBottomMargin(159.3105)
node_bg:addChild(image_text_bg)

--Create text_notice
local text_notice = ccui.Text:create()
text_notice:ignoreContentAdaptWithSize(true)
text_notice:setTextAreaSize({width = 0, height = 0})
text_notice:setFontSize(30)
text_notice:setString([[恭喜获得]])
text_notice:setLayoutComponentEnabled(true)
text_notice:setName("text_notice")
text_notice:setTag(238)
text_notice:setCascadeColorEnabled(true)
text_notice:setCascadeOpacityEnabled(true)
text_notice:setPosition(155.0000, 24.0000)
text_notice:setTextColor({r = 253, g = 255, b = 252})
layout = ccui.LayoutComponent:bindLayoutComponent(text_notice)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.3871)
layout:setPercentHeight(0.6250)
layout:setSize({width = 120.0000, height = 30.0000})
layout:setLeftMargin(95.0000)
layout:setRightMargin(95.0000)
layout:setTopMargin(9.0000)
layout:setBottomMargin(9.0000)
image_text_bg:addChild(text_notice)

--Create text_leavenotice
local text_leavenotice = ccui.Text:create()
text_leavenotice:ignoreContentAdaptWithSize(true)
text_leavenotice:setTextAreaSize({width = 0, height = 0})
text_leavenotice:setFontSize(30)
text_leavenotice:setString([[恭喜获得]])
text_leavenotice:setLayoutComponentEnabled(true)
text_leavenotice:setName("text_leavenotice")
text_leavenotice:setTag(239)
text_leavenotice:setCascadeColorEnabled(true)
text_leavenotice:setCascadeOpacityEnabled(true)
text_leavenotice:setPosition(0.0000, -330.1647)
text_leavenotice:setTextColor({r = 253, g = 255, b = 252})
layout = ccui.LayoutComponent:bindLayoutComponent(text_leavenotice)
layout:setSize({width = 120.0000, height = 30.0000})
layout:setLeftMargin(-60.0000)
layout:setRightMargin(-60.0000)
layout:setTopMargin(315.1647)
layout:setBottomMargin(-345.1647)
node_bg:addChild(text_leavenotice)

--Create spr_light
local spr_light = cc.Sprite:create("battle/lottery/lottery_effect_light_1.png")
spr_light:setName("spr_light")
spr_light:setTag(575)
spr_light:setCascadeColorEnabled(true)
spr_light:setCascadeOpacityEnabled(true)
spr_light:setPosition(-1.5826, 2.3464)
spr_light:setScaleX(2.0000)
spr_light:setScaleY(2.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(spr_light)
layout:setSize({width = 140.0000, height = 140.0000})
layout:setLeftMargin(-71.5826)
layout:setRightMargin(-68.4174)
layout:setTopMargin(-72.3464)
layout:setBottomMargin(-67.6536)
spr_light:setBlendFunc({src = 1, dst = 771})
node_bg:addChild(spr_light)

--Create node_prop
innerCSD = require("ui.battle.lottery.uishell")
innerProject = innerCSD.create(callBackProvider)
local node_prop = innerProject.root
node_prop.animation = innerProject.animation
node_prop:setName("node_prop")
node_prop:setTag(564)
node_prop:setCascadeColorEnabled(true)
node_prop:setCascadeOpacityEnabled(true)
node_prop:setPosition(0.0002, -93.5075)
layout = ccui.LayoutComponent:bindLayoutComponent(node_prop)
layout:setLeftMargin(0.0002)
layout:setRightMargin(-0.0002)
layout:setTopMargin(93.5075)
layout:setBottomMargin(-93.5075)
innerProject.animation:setTimeSpeed(1.0000)
node_prop:runAction(innerProject.animation)
panel:addChild(node_prop)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(30)
result['animation']:setTimeSpeed(1.0000)

--Create PositionTimeline
local PositionTimeline = ccs.Timeline:create()

localFrame = ccs.PositionFrame:create()
localFrame:setFrameIndex(0)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setX(0.0000)
localFrame:setY(0.0000)
PositionTimeline:addFrame(localFrame)

localFrame = ccs.PositionFrame:create()
localFrame:setFrameIndex(10)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setX(0.0000)
localFrame:setY(0.0000)
PositionTimeline:addFrame(localFrame)

localFrame = ccs.PositionFrame:create()
localFrame:setFrameIndex(20)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setX(0.0000)
localFrame:setY(0.0000)
PositionTimeline:addFrame(localFrame)

localFrame = ccs.PositionFrame:create()
localFrame:setFrameIndex(30)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setX(0.0000)
localFrame:setY(0.0000)
PositionTimeline:addFrame(localFrame)

result['animation']:addTimeline(PositionTimeline)
PositionTimeline:setNode(panel)

--Create ScaleTimeline
local ScaleTimeline = ccs.Timeline:create()

localFrame = ccs.ScaleFrame:create()
localFrame:setFrameIndex(0)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setScaleX(0.0100)
localFrame:setScaleY(0.0100)
ScaleTimeline:addFrame(localFrame)

localFrame = ccs.ScaleFrame:create()
localFrame:setFrameIndex(10)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setScaleX(1.2000)
localFrame:setScaleY(1.2000)
ScaleTimeline:addFrame(localFrame)

localFrame = ccs.ScaleFrame:create()
localFrame:setFrameIndex(20)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setScaleX(0.9000)
localFrame:setScaleY(0.9000)
ScaleTimeline:addFrame(localFrame)

localFrame = ccs.ScaleFrame:create()
localFrame:setFrameIndex(30)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setScaleX(1.0000)
localFrame:setScaleY(1.0000)
ScaleTimeline:addFrame(localFrame)

result['animation']:addTimeline(ScaleTimeline)
ScaleTimeline:setNode(panel)

--Create RotationSkewTimeline
local RotationSkewTimeline = ccs.Timeline:create()

localFrame = ccs.RotationSkewFrame:create()
localFrame:setFrameIndex(0)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setSkewX(0.0000)
localFrame:setSkewY(0.0000)
RotationSkewTimeline:addFrame(localFrame)

localFrame = ccs.RotationSkewFrame:create()
localFrame:setFrameIndex(10)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setSkewX(0.0000)
localFrame:setSkewY(0.0000)
RotationSkewTimeline:addFrame(localFrame)

localFrame = ccs.RotationSkewFrame:create()
localFrame:setFrameIndex(20)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setSkewX(0.0000)
localFrame:setSkewY(0.0000)
RotationSkewTimeline:addFrame(localFrame)

localFrame = ccs.RotationSkewFrame:create()
localFrame:setFrameIndex(30)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setSkewX(0.0000)
localFrame:setSkewY(0.0000)
RotationSkewTimeline:addFrame(localFrame)

result['animation']:addTimeline(RotationSkewTimeline)
RotationSkewTimeline:setNode(panel)
--Create Animation List
local show = {name="show", startIndex=0, endIndex=30}
result['animation']:addAnimationInfo(show)

result['root'] = Node
return result;
end

return Result

