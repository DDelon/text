--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create panel
local panel = ccui.ImageView:create()
panel:ignoreContentAdaptWithSize(false)
panel:loadTexture("hall/hallpic/hall_pic_racelamp_bg.png",0)
panel:setScale9Enabled(true)
panel:setCapInsets({x = 85, y = 13, width = 1, height = 14})
panel:setLayoutComponentEnabled(true)
panel:setName("panel")
panel:setTag(26)
panel:setCascadeColorEnabled(true)
panel:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(panel)
layout:setSize({width = 770.0000, height = 40.0000})
layout:setLeftMargin(-385.0000)
layout:setRightMargin(-385.0000)
layout:setTopMargin(-20.0000)
layout:setBottomMargin(-20.0000)
Node:addChild(panel)

--Create panel_clip
local panel_clip = ccui.Layout:create()
panel_clip:ignoreContentAdaptWithSize(false)
panel_clip:setClippingEnabled(true)
panel_clip:setBackGroundColorType(1)
panel_clip:setBackGroundColor({r = 150, g = 200, b = 255})
panel_clip:setBackGroundColorOpacity(0)
panel_clip:setTouchEnabled(true);
panel_clip:setLayoutComponentEnabled(true)
panel_clip:setName("panel_clip")
panel_clip:setTag(27)
panel_clip:setCascadeColorEnabled(true)
panel_clip:setCascadeOpacityEnabled(true)
panel_clip:setPosition(79.0020, 2.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(panel_clip)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.1026)
layout:setPositionPercentY(0.0500)
layout:setPercentWidth(0.8701)
layout:setPercentHeight(0.9500)
layout:setSize({width = 670.0000, height = 38.0000})
layout:setLeftMargin(79.0020)
layout:setRightMargin(20.9980)
layout:setBottomMargin(2.0000)
panel:addChild(panel_clip)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(0.3333)
--Create Animation List
local move01 = {name="move01", startIndex=1, endIndex=120}
result['animation']:addAnimationInfo(move01)

result['root'] = Node
return result;
end

return Result

