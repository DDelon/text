--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create panel
local panel = ccui.Layout:create()
panel:ignoreContentAdaptWithSize(false)
panel:setClippingEnabled(false)
panel:setBackGroundColorType(1)
panel:setBackGroundColor({r = 150, g = 200, b = 255})
panel:setBackGroundColorOpacity(0)
panel:setTouchEnabled(true);
panel:setLayoutComponentEnabled(true)
panel:setName("panel")
panel:setTag(30)
panel:setCascadeColorEnabled(true)
panel:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(panel)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
Node:addChild(panel)

--Create image_bg
local image_bg = ccui.ImageView:create()
image_bg:ignoreContentAdaptWithSize(false)
image_bg:loadTexture("common/layerbg/com_pic_insert_bg.png",0)
image_bg:setScale9Enabled(true)
image_bg:setCapInsets({x = 23, y = 20, width = 1, height = 1})
image_bg:setLayoutComponentEnabled(true)
image_bg:setName("image_bg")
image_bg:setTag(442)
image_bg:setCascadeColorEnabled(true)
image_bg:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(image_bg)
layout:setSize({width = 348.0000, height = 42.0000})
layout:setLeftMargin(-174.0000)
layout:setRightMargin(-174.0000)
layout:setTopMargin(-21.0000)
layout:setBottomMargin(-21.0000)
panel:addChild(image_bg)

--Create btn_del
local btn_del = ccui.Button:create()
btn_del:ignoreContentAdaptWithSize(false)
btn_del:loadTextureNormal("login/login_pic_sc.png",0)
btn_del:loadTexturePressed("login/login_pic_sc.png",0)
btn_del:loadTextureDisabled("login/login_pic_sc.png",0)
btn_del:setTitleFontSize(14)
btn_del:setTitleColor({r = 65, g = 65, b = 70})
btn_del:setScale9Enabled(true)
btn_del:setCapInsets({x = 9, y = 11, width = 10, height = 6})
btn_del:setLayoutComponentEnabled(true)
btn_del:setName("btn_del")
btn_del:setTag(445)
btn_del:setCascadeColorEnabled(true)
btn_del:setCascadeOpacityEnabled(true)
btn_del:setPosition(325.2446, 21.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(btn_del)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.9346)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.0805)
layout:setPercentHeight(0.6667)
layout:setSize({width = 28.0000, height = 28.0000})
layout:setLeftMargin(311.2446)
layout:setRightMargin(8.7554)
layout:setTopMargin(7.0000)
layout:setBottomMargin(7.0000)
image_bg:addChild(btn_del)

--Create text_account
local text_account = ccui.Text:create()
text_account:ignoreContentAdaptWithSize(true)
text_account:setTextAreaSize({width = 0, height = 0})
text_account:setFontSize(30)
text_account:setString([[Text Label]])
text_account:setLayoutComponentEnabled(true)
text_account:setName("text_account")
text_account:setTag(444)
text_account:setCascadeColorEnabled(true)
text_account:setCascadeOpacityEnabled(true)
text_account:setAnchorPoint(0.0000, 0.5000)
text_account:setPosition(-165.6500, 0.0000)
text_account:setTextColor({r = 0, g = 0, b = 0})
layout = ccui.LayoutComponent:bindLayoutComponent(text_account)
layout:setPositionPercentYEnabled(true)
layout:setSize({width = 150.0000, height = 30.0000})
layout:setLeftMargin(-165.6500)
layout:setRightMargin(15.6500)
layout:setTopMargin(-15.0000)
layout:setBottomMargin(-15.0000)
panel:addChild(text_account)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

