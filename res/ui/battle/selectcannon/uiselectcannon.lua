--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create panel
local panel = ccui.Layout:create()
panel:ignoreContentAdaptWithSize(false)
panel:setClippingEnabled(false)
panel:setBackGroundColorType(1)
panel:setBackGroundColor({r = 150, g = 200, b = 255})
panel:setBackGroundColorOpacity(0)
panel:setTouchEnabled(true);
panel:setLayoutComponentEnabled(true)
panel:setName("panel")
panel:setTag(864)
panel:setCascadeColorEnabled(true)
panel:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(panel)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
Node:addChild(panel)

--Create img_bg
local img_bg = ccui.ImageView:create()
img_bg:ignoreContentAdaptWithSize(false)
img_bg:loadTexture("common/layerbg/com_bg_pic_3.png",0)
img_bg:setScale9Enabled(true)
img_bg:setCapInsets({x = 135, y = 92, width = 20, height = 28})
img_bg:setLayoutComponentEnabled(true)
img_bg:setName("img_bg")
img_bg:setTag(24)
img_bg:setCascadeColorEnabled(true)
img_bg:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(img_bg)
layout:setSize({width = 1062.0000, height = 448.0000})
layout:setLeftMargin(-531.0000)
layout:setRightMargin(-531.0000)
layout:setTopMargin(-224.0000)
layout:setBottomMargin(-224.0000)
panel:addChild(img_bg)

--Create img_bg_1
local img_bg_1 = ccui.ImageView:create()
img_bg_1:ignoreContentAdaptWithSize(false)
img_bg_1:loadTexture("common/layerbg/com_bg_pic_tmbg.png",0)
img_bg_1:setScale9Enabled(true)
img_bg_1:setCapInsets({x = 37, y = 5, width = 1, height = 4})
img_bg_1:setLayoutComponentEnabled(true)
img_bg_1:setName("img_bg_1")
img_bg_1:setTag(866)
img_bg_1:setCascadeColorEnabled(true)
img_bg_1:setCascadeOpacityEnabled(true)
img_bg_1:setPosition(531.0000, 196.6633)
layout = ccui.LayoutComponent:bindLayoutComponent(img_bg_1)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.4390)
layout:setPercentWidth(0.9680)
layout:setPercentHeight(0.8080)
layout:setSize({width = 1028.0000, height = 362.0000})
layout:setLeftMargin(17.0000)
layout:setRightMargin(17.0000)
layout:setTopMargin(70.3367)
layout:setBottomMargin(15.6633)
img_bg:addChild(img_bg_1)

--Create spr_title
local spr_title = cc.Sprite:create("battle/selectcannon/selectcannon_pic_words_hp.png")
spr_title:setName("spr_title")
spr_title:setTag(25)
spr_title:setCascadeColorEnabled(true)
spr_title:setCascadeOpacityEnabled(true)
spr_title:setPosition(0.0000, 179.7844)
layout = ccui.LayoutComponent:bindLayoutComponent(spr_title)
layout:setPositionPercentXEnabled(true)
layout:setSize({width = 90.0000, height = 42.0000})
layout:setLeftMargin(-45.0000)
layout:setRightMargin(-45.0000)
layout:setTopMargin(-200.7844)
layout:setBottomMargin(158.7844)
spr_title:setBlendFunc({src = 1, dst = 771})
panel:addChild(spr_title)

--Create btn_close
local btn_close = ccui.Button:create()
btn_close:ignoreContentAdaptWithSize(false)
btn_close:loadTextureNormal("common/btn/com_btn_close_0.png",0)
btn_close:loadTexturePressed("common/btn/com_btn_close_1.png",0)
btn_close:loadTextureDisabled("common/btn/com_btn_close_1.png",0)
btn_close:setTitleFontSize(14)
btn_close:setTitleColor({r = 65, g = 65, b = 70})
btn_close:setScale9Enabled(true)
btn_close:setCapInsets({x = 15, y = 11, width = 40, height = 48})
btn_close:setLayoutComponentEnabled(true)
btn_close:setName("btn_close")
btn_close:setTag(124)
btn_close:setCascadeColorEnabled(true)
btn_close:setCascadeOpacityEnabled(true)
btn_close:setPosition(500.5007, 191.1939)
layout = ccui.LayoutComponent:bindLayoutComponent(btn_close)
layout:setSize({width = 70.0000, height = 70.0000})
layout:setLeftMargin(465.5007)
layout:setRightMargin(-535.5007)
layout:setTopMargin(-226.1939)
layout:setBottomMargin(156.1939)
panel:addChild(btn_close)

--Create scroll_list
local scroll_list = ccui.ScrollView:create()
scroll_list:setDirection(2)
scroll_list:setInnerContainerSize({width = 1100, height = 400})
scroll_list:ignoreContentAdaptWithSize(false)
scroll_list:setClippingEnabled(true)
scroll_list:setBackGroundColorType(1)
scroll_list:setBackGroundColor({r = 255, g = 150, b = 100})
scroll_list:setBackGroundColorOpacity(0)
scroll_list:setLayoutComponentEnabled(true)
scroll_list:setName("scroll_list")
scroll_list:setTag(125)
scroll_list:setCascadeColorEnabled(true)
scroll_list:setCascadeOpacityEnabled(true)
scroll_list:setAnchorPoint(0.5000, 0.5000)
scroll_list:setPosition(0.0000, -26.2559)
layout = ccui.LayoutComponent:bindLayoutComponent(scroll_list)
layout:setPositionPercentXEnabled(true)
layout:setSize({width = 1026.0000, height = 358.0000})
layout:setLeftMargin(-513.0000)
layout:setRightMargin(-513.0000)
layout:setTopMargin(-152.7441)
layout:setBottomMargin(-205.2559)
panel:addChild(scroll_list)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)

--Create PositionTimeline
local PositionTimeline = ccs.Timeline:create()

localFrame = ccs.PositionFrame:create()
localFrame:setFrameIndex(0)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setX(500.5007)
localFrame:setY(191.1939)
PositionTimeline:addFrame(localFrame)

result['animation']:addTimeline(PositionTimeline)
PositionTimeline:setNode(btn_close)
--Create Animation List

result['root'] = Node
return result;
end

return Result

