--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create img_bg
local img_bg = ccui.ImageView:create()
img_bg:ignoreContentAdaptWithSize(false)
img_bg:loadTexture("common/layerbg/com_bl_infobg.png",0)
img_bg:setScale9Enabled(true)
img_bg:setCapInsets({x = 23, y = 23, width = 26, height = 26})
img_bg:setLayoutComponentEnabled(true)
img_bg:setName("img_bg")
img_bg:setTag(10)
img_bg:setCascadeColorEnabled(true)
img_bg:setCascadeOpacityEnabled(true)
img_bg:setPosition(11.9000, 19.4626)
img_bg:setOpacity(0)
layout = ccui.LayoutComponent:bindLayoutComponent(img_bg)
layout:setSize({width = 524.0000, height = 186.0000})
layout:setLeftMargin(-250.1000)
layout:setRightMargin(-273.9000)
layout:setTopMargin(-112.4626)
layout:setBottomMargin(-73.5374)
Node:addChild(img_bg)

--Create scroll_list
local scroll_list = ccui.ScrollView:create()
scroll_list:setBounceEnabled(true)
scroll_list:setDirection(2)
scroll_list:setInnerContainerSize({width = 490, height = 120})
scroll_list:ignoreContentAdaptWithSize(false)
scroll_list:setClippingEnabled(true)
scroll_list:setBackGroundColorType(1)
scroll_list:setBackGroundColor({r = 255, g = 150, b = 100})
scroll_list:setBackGroundColorOpacity(0)
scroll_list:setLayoutComponentEnabled(true)
scroll_list:setName("scroll_list")
scroll_list:setTag(12)
scroll_list:setCascadeColorEnabled(true)
scroll_list:setCascadeOpacityEnabled(true)
scroll_list:setAnchorPoint(0.5000, 0.5000)
layout = ccui.LayoutComponent:bindLayoutComponent(scroll_list)
layout:setSize({width = 490.0000, height = 120.0000})
layout:setLeftMargin(-245.0000)
layout:setRightMargin(-245.0000)
layout:setTopMargin(-60.0000)
layout:setBottomMargin(-60.0000)
Node:addChild(scroll_list)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

